name: Publish to npm

on:
  release:
    types: [released, prereleased]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2.4.0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm build

      - name: Get release version
        uses: actions/github-script@v6
        id: version
        with:
          script: |
            const ref = context.ref
            const release = ref.substring(10)
            const releaseType = release.replace(/^(\d+\.)+\d+-?/, "").replace(/\.\d+$/, "")
            core.setOutput("release", release)
            core.setOutput("releaseType", releaseType || "latest")
            console.log({ ref, release, releaseType })

      - name: Set publish config
        run: |
          pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish to npm
        run: |
          pnpm publish --no-git-checks --access public --tag ${{ steps.version.outputs.releaseType }}
